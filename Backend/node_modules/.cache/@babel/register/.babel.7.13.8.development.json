{
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/filipszutkowski/projects/react-todos-backend/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/filipszutkowski/projects/react-todos-backend\",\"filename\":\"/Users/filipszutkowski/projects/react-todos-backend/src/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/filipszutkowski/projects/react-todos-backend\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/filipszutkowski/projects/react-todos-backend/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/filipszutkowski/projects/react-todos-backend",
      "filename": "/Users/filipszutkowski/projects/react-todos-backend/src/server.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/filipszutkowski/projects/react-todos-backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/filipszutkowski/projects/react-todos-backend/src/server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/filipszutkowski/projects/react-todos-backend/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/filipszutkowski/projects/react-todos-backend/src/",
        "sourceFileName": "server.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _bodyParser = _interopRequireDefault(require(\"body-parser\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar app = (0, _express[\"default\"])();\napp.set('port', process.env.PORT || 8080);\napp.use(_bodyParser[\"default\"].json());\nvar user = {\n  name: 'Hobbit',\n  auth: 'randomStringAndNumber',\n  tasks: []\n};\napp.post('/profile', function (req, res) {\n  var _req$body = req.body,\n      name = _req$body.name,\n      auth = _req$body.auth,\n      tasks = _req$body.tasks;\n  var userAuth = name === user.name && auth === user.auth;\n\n  if (!userAuth) {\n    res.status(500).send('wrong credz');\n    return;\n  }\n\n  user = _objectSpread(_objectSpread({}, user), {}, {\n    tasks: tasks\n  });\n  res.status(200).json(tasks.length);\n});\napp.listen(app.get('port'), function () {\n  console.log('server running', app.get('port'));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJzZXQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsInVzZSIsImJvZHlQYXJzZXIiLCJqc29uIiwidXNlciIsIm5hbWUiLCJhdXRoIiwidGFza3MiLCJwb3N0IiwicmVxIiwicmVzIiwiYm9keSIsInVzZXJBdXRoIiwic3RhdHVzIiwic2VuZCIsImxlbmd0aCIsImxpc3RlbiIsImdldCIsImNvbnNvbGUiLCJsb2ciXSwibWFwcGluZ3MiOiI7O0FBQUE7O0FBQ0E7Ozs7Ozs7Ozs7QUFFQSxJQUFNQSxHQUFHLEdBQUcsMEJBQVo7QUFDQUEsR0FBRyxDQUFDQyxHQUFKLENBQVEsTUFBUixFQUFnQkMsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQVosSUFBb0IsSUFBcEM7QUFDQUosR0FBRyxDQUFDSyxHQUFKLENBQVFDLHVCQUFXQyxJQUFYLEVBQVI7QUFFQSxJQUFJQyxJQUFJLEdBQUc7QUFDVEMsRUFBQUEsSUFBSSxFQUFFLFFBREc7QUFFVEMsRUFBQUEsSUFBSSxFQUFFLHVCQUZHO0FBR1RDLEVBQUFBLEtBQUssRUFBRTtBQUhFLENBQVg7QUFNQVgsR0FBRyxDQUFDWSxJQUFKLENBQVMsVUFBVCxFQUFxQixVQUFDQyxHQUFELEVBQU1DLEdBQU4sRUFBYztBQUFBLGtCQUNIRCxHQUFHLENBQUNFLElBREQ7QUFBQSxNQUN6Qk4sSUFEeUIsYUFDekJBLElBRHlCO0FBQUEsTUFDbkJDLElBRG1CLGFBQ25CQSxJQURtQjtBQUFBLE1BQ2JDLEtBRGEsYUFDYkEsS0FEYTtBQUVqQyxNQUFNSyxRQUFRLEdBQUdQLElBQUksS0FBS0QsSUFBSSxDQUFDQyxJQUFkLElBQXNCQyxJQUFJLEtBQUtGLElBQUksQ0FBQ0UsSUFBckQ7O0FBQ0EsTUFBSSxDQUFDTSxRQUFMLEVBQWU7QUFDYkYsSUFBQUEsR0FBRyxDQUFDRyxNQUFKLENBQVcsR0FBWCxFQUFnQkMsSUFBaEIsQ0FBcUIsYUFBckI7QUFDQTtBQUNEOztBQUNEVixFQUFBQSxJQUFJLG1DQUFRQSxJQUFSO0FBQWNHLElBQUFBLEtBQUssRUFBRUE7QUFBckIsSUFBSjtBQUVBRyxFQUFBQSxHQUFHLENBQUNHLE1BQUosQ0FBVyxHQUFYLEVBQWdCVixJQUFoQixDQUFxQkksS0FBSyxDQUFDUSxNQUEzQjtBQUNELENBVkQ7QUFZQW5CLEdBQUcsQ0FBQ29CLE1BQUosQ0FBV3BCLEdBQUcsQ0FBQ3FCLEdBQUosQ0FBUSxNQUFSLENBQVgsRUFBNEIsWUFBWTtBQUN0Q0MsRUFBQUEsT0FBTyxDQUFDQyxHQUFSLENBQVksZ0JBQVosRUFBOEJ2QixHQUFHLENBQUNxQixHQUFKLENBQVEsTUFBUixDQUE5QjtBQUNELENBRkQiLCJzb3VyY2VSb290IjoiL1VzZXJzL2ZpbGlwc3p1dGtvd3NraS9wcm9qZWN0cy9yZWFjdC10b2Rvcy1iYWNrZW5kL3NyYy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBib2R5UGFyc2VyIGZyb20gJ2JvZHktcGFyc2VyJztcblxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuYXBwLnNldCgncG9ydCcsIHByb2Nlc3MuZW52LlBPUlQgfHwgODA4MCk7XG5hcHAudXNlKGJvZHlQYXJzZXIuanNvbigpKTtcblxubGV0IHVzZXIgPSB7XG4gIG5hbWU6ICdIb2JiaXQnLFxuICBhdXRoOiAncmFuZG9tU3RyaW5nQW5kTnVtYmVyJyxcbiAgdGFza3M6IFtdLFxufTtcblxuYXBwLnBvc3QoJy9wcm9maWxlJywgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IHsgbmFtZSwgYXV0aCwgdGFza3MgfSA9IHJlcS5ib2R5O1xuICBjb25zdCB1c2VyQXV0aCA9IG5hbWUgPT09IHVzZXIubmFtZSAmJiBhdXRoID09PSB1c2VyLmF1dGg7XG4gIGlmICghdXNlckF1dGgpIHtcbiAgICByZXMuc3RhdHVzKDUwMCkuc2VuZCgnd3JvbmcgY3JlZHonKTtcbiAgICByZXR1cm47XG4gIH1cbiAgdXNlciA9IHsgLi4udXNlciwgdGFza3M6IHRhc2tzIH07XG5cbiAgcmVzLnN0YXR1cygyMDApLmpzb24odGFza3MubGVuZ3RoKTtcbn0pO1xuXG5hcHAubGlzdGVuKGFwcC5nZXQoJ3BvcnQnKSwgZnVuY3Rpb24gKCkge1xuICBjb25zb2xlLmxvZygnc2VydmVyIHJ1bm5pbmcnLCBhcHAuZ2V0KCdwb3J0JykpO1xufSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "set",
        "process",
        "env",
        "PORT",
        "use",
        "bodyParser",
        "json",
        "user",
        "name",
        "auth",
        "tasks",
        "post",
        "req",
        "res",
        "body",
        "userAuth",
        "status",
        "send",
        "length",
        "listen",
        "get",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;AACA;;;;;;;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;AACAA,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgBC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAApC;AACAJ,GAAG,CAACK,GAAJ,CAAQC,uBAAWC,IAAX,EAAR;AAEA,IAAIC,IAAI,GAAG;AACTC,EAAAA,IAAI,EAAE,QADG;AAETC,EAAAA,IAAI,EAAE,uBAFG;AAGTC,EAAAA,KAAK,EAAE;AAHE,CAAX;AAMAX,GAAG,CAACY,IAAJ,CAAS,UAAT,EAAqB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAAA,kBACHD,GAAG,CAACE,IADD;AAAA,MACzBN,IADyB,aACzBA,IADyB;AAAA,MACnBC,IADmB,aACnBA,IADmB;AAAA,MACbC,KADa,aACbA,KADa;AAEjC,MAAMK,QAAQ,GAAGP,IAAI,KAAKD,IAAI,CAACC,IAAd,IAAsBC,IAAI,KAAKF,IAAI,CAACE,IAArD;;AACA,MAAI,CAACM,QAAL,EAAe;AACbF,IAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,aAArB;AACA;AACD;;AACDV,EAAAA,IAAI,mCAAQA,IAAR;AAAcG,IAAAA,KAAK,EAAEA;AAArB,IAAJ;AAEAG,EAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBV,IAAhB,CAAqBI,KAAK,CAACQ,MAA3B;AACD,CAVD;AAYAnB,GAAG,CAACoB,MAAJ,CAAWpB,GAAG,CAACqB,GAAJ,CAAQ,MAAR,CAAX,EAA4B,YAAY;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BvB,GAAG,CAACqB,GAAJ,CAAQ,MAAR,CAA9B;AACD,CAFD",
      "sourceRoot": "/Users/filipszutkowski/projects/react-todos-backend/src/",
      "sourcesContent": [
        "import express from 'express';\nimport bodyParser from 'body-parser';\n\nconst app = express();\napp.set('port', process.env.PORT || 8080);\napp.use(bodyParser.json());\n\nlet user = {\n  name: 'Hobbit',\n  auth: 'randomStringAndNumber',\n  tasks: [],\n};\n\napp.post('/profile', (req, res) => {\n  const { name, auth, tasks } = req.body;\n  const userAuth = name === user.name && auth === user.auth;\n  if (!userAuth) {\n    res.status(500).send('wrong credz');\n    return;\n  }\n  user = { ...user, tasks: tasks };\n\n  res.status(200).json(tasks.length);\n});\n\napp.listen(app.get('port'), function () {\n  console.log('server running', app.get('port'));\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1615277253242
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/filipszutkowski/projects/react-todos/Backend/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/filipszutkowski/projects/react-todos/Backend\",\"filename\":\"/Users/filipszutkowski/projects/react-todos/Backend/src/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/filipszutkowski/projects/react-todos/Backend\",\"plugins\":[],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/filipszutkowski/projects/react-todos/Backend/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/filipszutkowski/projects/react-todos/Backend",
      "filename": "/Users/filipszutkowski/projects/react-todos/Backend/src/server.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/filipszutkowski/projects/react-todos/Backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/filipszutkowski/projects/react-todos/Backend/src/server.js",
        "plugins": []
      },
      "generatorOpts": {
        "filename": "/Users/filipszutkowski/projects/react-todos/Backend/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/filipszutkowski/projects/react-todos/Backend/src/",
        "sourceFileName": "server.js"
      }
    },
    "ast": null,
    "code": "import express from 'express';\nimport bodyParser from 'body-parser';\nconst app = express();\napp.set('port', process.env.PORT || 8080);\napp.use(bodyParser.json());\nlet user = {\n  name: 'Hobbit',\n  auth: 'randomStringAndNumber',\n  tasks: []\n};\napp.post('/profile', (req, res) => {\n  const {\n    name,\n    auth,\n    tasks\n  } = req.body;\n  const userAuth = name === user.name && auth === user.auth;\n\n  if (!userAuth) {\n    res.status(500).send('wrong credz');\n    return;\n  }\n\n  user = { ...user,\n    tasks: tasks\n  };\n  res.status(200).json(tasks.length);\n});\napp.listen(app.get('port'), function () {\n  console.log('server running', app.get('port'));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJleHByZXNzIiwiYm9keVBhcnNlciIsImFwcCIsInNldCIsInByb2Nlc3MiLCJlbnYiLCJQT1JUIiwidXNlIiwianNvbiIsInVzZXIiLCJuYW1lIiwiYXV0aCIsInRhc2tzIiwicG9zdCIsInJlcSIsInJlcyIsImJvZHkiLCJ1c2VyQXV0aCIsInN0YXR1cyIsInNlbmQiLCJsZW5ndGgiLCJsaXN0ZW4iLCJnZXQiLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiQUFBQSxPQUFPQSxPQUFQLE1BQW9CLFNBQXBCO0FBQ0EsT0FBT0MsVUFBUCxNQUF1QixhQUF2QjtBQUVBLE1BQU1DLEdBQUcsR0FBR0YsT0FBTyxFQUFuQjtBQUNBRSxHQUFHLENBQUNDLEdBQUosQ0FBUSxNQUFSLEVBQWdCQyxPQUFPLENBQUNDLEdBQVIsQ0FBWUMsSUFBWixJQUFvQixJQUFwQztBQUNBSixHQUFHLENBQUNLLEdBQUosQ0FBUU4sVUFBVSxDQUFDTyxJQUFYLEVBQVI7QUFFQSxJQUFJQyxJQUFJLEdBQUc7QUFDVEMsRUFBQUEsSUFBSSxFQUFFLFFBREc7QUFFVEMsRUFBQUEsSUFBSSxFQUFFLHVCQUZHO0FBR1RDLEVBQUFBLEtBQUssRUFBRTtBQUhFLENBQVg7QUFNQVYsR0FBRyxDQUFDVyxJQUFKLENBQVMsVUFBVCxFQUFxQixDQUFDQyxHQUFELEVBQU1DLEdBQU4sS0FBYztBQUNqQyxRQUFNO0FBQUVMLElBQUFBLElBQUY7QUFBUUMsSUFBQUEsSUFBUjtBQUFjQyxJQUFBQTtBQUFkLE1BQXdCRSxHQUFHLENBQUNFLElBQWxDO0FBQ0EsUUFBTUMsUUFBUSxHQUFHUCxJQUFJLEtBQUtELElBQUksQ0FBQ0MsSUFBZCxJQUFzQkMsSUFBSSxLQUFLRixJQUFJLENBQUNFLElBQXJEOztBQUNBLE1BQUksQ0FBQ00sUUFBTCxFQUFlO0FBQ2JGLElBQUFBLEdBQUcsQ0FBQ0csTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCLGFBQXJCO0FBQ0E7QUFDRDs7QUFDRFYsRUFBQUEsSUFBSSxHQUFHLEVBQUUsR0FBR0EsSUFBTDtBQUFXRyxJQUFBQSxLQUFLLEVBQUVBO0FBQWxCLEdBQVA7QUFFQUcsRUFBQUEsR0FBRyxDQUFDRyxNQUFKLENBQVcsR0FBWCxFQUFnQlYsSUFBaEIsQ0FBcUJJLEtBQUssQ0FBQ1EsTUFBM0I7QUFDRCxDQVZEO0FBWUFsQixHQUFHLENBQUNtQixNQUFKLENBQVduQixHQUFHLENBQUNvQixHQUFKLENBQVEsTUFBUixDQUFYLEVBQTRCLFlBQVk7QUFDdENDLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGdCQUFaLEVBQThCdEIsR0FBRyxDQUFDb0IsR0FBSixDQUFRLE1BQVIsQ0FBOUI7QUFDRCxDQUZEIiwic291cmNlUm9vdCI6Ii9Vc2Vycy9maWxpcHN6dXRrb3dza2kvcHJvamVjdHMvcmVhY3QtdG9kb3MvQmFja2VuZC9zcmMvIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbmFwcC5zZXQoJ3BvcnQnLCBwcm9jZXNzLmVudi5QT1JUIHx8IDgwODApO1xuYXBwLnVzZShib2R5UGFyc2VyLmpzb24oKSk7XG5cbmxldCB1c2VyID0ge1xuICBuYW1lOiAnSG9iYml0JyxcbiAgYXV0aDogJ3JhbmRvbVN0cmluZ0FuZE51bWJlcicsXG4gIHRhc2tzOiBbXSxcbn07XG5cbmFwcC5wb3N0KCcvcHJvZmlsZScsIChyZXEsIHJlcykgPT4ge1xuICBjb25zdCB7IG5hbWUsIGF1dGgsIHRhc2tzIH0gPSByZXEuYm9keTtcbiAgY29uc3QgdXNlckF1dGggPSBuYW1lID09PSB1c2VyLm5hbWUgJiYgYXV0aCA9PT0gdXNlci5hdXRoO1xuICBpZiAoIXVzZXJBdXRoKSB7XG4gICAgcmVzLnN0YXR1cyg1MDApLnNlbmQoJ3dyb25nIGNyZWR6Jyk7XG4gICAgcmV0dXJuO1xuICB9XG4gIHVzZXIgPSB7IC4uLnVzZXIsIHRhc2tzOiB0YXNrcyB9O1xuXG4gIHJlcy5zdGF0dXMoMjAwKS5qc29uKHRhc2tzLmxlbmd0aCk7XG59KTtcblxuYXBwLmxpc3RlbihhcHAuZ2V0KCdwb3J0JyksIGZ1bmN0aW9uICgpIHtcbiAgY29uc29sZS5sb2coJ3NlcnZlciBydW5uaW5nJywgYXBwLmdldCgncG9ydCcpKTtcbn0pO1xuIl19",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "express",
        "bodyParser",
        "app",
        "set",
        "process",
        "env",
        "PORT",
        "use",
        "json",
        "user",
        "name",
        "auth",
        "tasks",
        "post",
        "req",
        "res",
        "body",
        "userAuth",
        "status",
        "send",
        "length",
        "listen",
        "get",
        "console",
        "log"
      ],
      "mappings": "AAAA,OAAOA,OAAP,MAAoB,SAApB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,MAAMC,GAAG,GAAGF,OAAO,EAAnB;AACAE,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgBC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAApC;AACAJ,GAAG,CAACK,GAAJ,CAAQN,UAAU,CAACO,IAAX,EAAR;AAEA,IAAIC,IAAI,GAAG;AACTC,EAAAA,IAAI,EAAE,QADG;AAETC,EAAAA,IAAI,EAAE,uBAFG;AAGTC,EAAAA,KAAK,EAAE;AAHE,CAAX;AAMAV,GAAG,CAACW,IAAJ,CAAS,UAAT,EAAqB,CAACC,GAAD,EAAMC,GAAN,KAAc;AACjC,QAAM;AAAEL,IAAAA,IAAF;AAAQC,IAAAA,IAAR;AAAcC,IAAAA;AAAd,MAAwBE,GAAG,CAACE,IAAlC;AACA,QAAMC,QAAQ,GAAGP,IAAI,KAAKD,IAAI,CAACC,IAAd,IAAsBC,IAAI,KAAKF,IAAI,CAACE,IAArD;;AACA,MAAI,CAACM,QAAL,EAAe;AACbF,IAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,aAArB;AACA;AACD;;AACDV,EAAAA,IAAI,GAAG,EAAE,GAAGA,IAAL;AAAWG,IAAAA,KAAK,EAAEA;AAAlB,GAAP;AAEAG,EAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBV,IAAhB,CAAqBI,KAAK,CAACQ,MAA3B;AACD,CAVD;AAYAlB,GAAG,CAACmB,MAAJ,CAAWnB,GAAG,CAACoB,GAAJ,CAAQ,MAAR,CAAX,EAA4B,YAAY;AACtCC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BtB,GAAG,CAACoB,GAAJ,CAAQ,MAAR,CAA9B;AACD,CAFD",
      "sourceRoot": "/Users/filipszutkowski/projects/react-todos/Backend/src/",
      "sourcesContent": [
        "import express from 'express';\nimport bodyParser from 'body-parser';\n\nconst app = express();\napp.set('port', process.env.PORT || 8080);\napp.use(bodyParser.json());\n\nlet user = {\n  name: 'Hobbit',\n  auth: 'randomStringAndNumber',\n  tasks: [],\n};\n\napp.post('/profile', (req, res) => {\n  const { name, auth, tasks } = req.body;\n  const userAuth = name === user.name && auth === user.auth;\n  if (!userAuth) {\n    res.status(500).send('wrong credz');\n    return;\n  }\n  user = { ...user, tasks: tasks };\n\n  res.status(200).json(tasks.length);\n});\n\napp.listen(app.get('port'), function () {\n  console.log('server running', app.get('port'));\n});\n"
      ]
    },
    "sourceType": "module",
    "mtime": 1615277253242
  },
  "{\"assumptions\":{},\"sourceRoot\":\"/Users/filipszutkowski/projects/react-todos/Backend/src/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/Users/filipszutkowski/projects/react-todos/Backend\",\"filename\":\"/Users/filipszutkowski/projects/react-todos/Backend/src/server.js\",\"targets\":{},\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"browserslistConfigFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/Users/filipszutkowski/projects/react-todos/Backend\",\"plugins\":[{\"key\":\"proposal-numeric-separator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"NumericLiteral\":{\"enter\":[null]},\"BigIntLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-json-strings\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"DirectiveLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-catch-binding\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"CatchClause\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-parameters\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-async-generator-functions\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-object-rest-spread\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"VariableDeclarator\":{\"enter\":[null]},\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectExpression\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-dotall-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-unicode-property-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-named-capturing-groups-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-async-to-generator\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-exponentiation-operator\",\"visitor\":{\"AssignmentExpression\":{\"enter\":[null]},\"BinaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-template-literals\",\"visitor\":{\"TaggedTemplateExpression\":{\"enter\":[null]},\"TemplateLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-literals\",\"visitor\":{\"NumericLiteral\":{\"enter\":[null]},\"StringLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-function-name\",\"visitor\":{\"FunctionExpression\":{\"exit\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-arrow-functions\",\"visitor\":{\"ArrowFunctionExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoped-functions\",\"visitor\":{\"BlockStatement\":{\"enter\":[null]},\"SwitchCase\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-classes\",\"visitor\":{\"ExportDefaultDeclaration\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-object-super\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-shorthand-properties\",\"visitor\":{\"ObjectMethod\":{\"enter\":[null]},\"ObjectProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-duplicate-keys\",\"visitor\":{\"ObjectExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-computed-properties\",\"visitor\":{\"ObjectExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-for-of\",\"visitor\":{\"ForOfStatement\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-sticky-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-escapes\",\"visitor\":{\"Identifier\":{\"enter\":[null]},\"TemplateElement\":{\"enter\":[null]},\"_exploded\":true,\"StringLiteral\":{\"enter\":[null]},\"DirectiveLiteral\":{\"enter\":[null]},\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-unicode-regex\",\"visitor\":{\"RegExpLiteral\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-spread\",\"visitor\":{\"ArrayExpression\":{\"enter\":[null]},\"CallExpression\":{\"enter\":[null]},\"NewExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-destructuring\",\"visitor\":{\"ExportNamedDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"AssignmentExpression\":{\"enter\":[null]},\"VariableDeclaration\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"ForInStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-block-scoping\",\"visitor\":{\"VariableDeclaration\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"_exploded\":true,\"BlockStatement\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"_verified\":true,\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-typeof-symbol\",\"visitor\":{\"UnaryExpression\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true,\"BlockStatement\":{\"enter\":[null]},\"CatchClause\":{\"enter\":[null]},\"DoWhileStatement\":{\"enter\":[null]},\"ForInStatement\":{\"enter\":[null]},\"ForStatement\":{\"enter\":[null]},\"FunctionDeclaration\":{\"enter\":[null]},\"FunctionExpression\":{\"enter\":[null]},\"Program\":{\"enter\":[null]},\"ObjectMethod\":{\"enter\":[null]},\"SwitchStatement\":{\"enter\":[null]},\"WhileStatement\":{\"enter\":[null]},\"ArrowFunctionExpression\":{\"enter\":[null]},\"ClassExpression\":{\"enter\":[null]},\"ClassDeclaration\":{\"enter\":[null]},\"ForOfStatement\":{\"enter\":[null]},\"ClassMethod\":{\"enter\":[null]},\"ClassPrivateMethod\":{\"enter\":[null]},\"StaticBlock\":{\"enter\":[null]},\"TSModuleBlock\":{\"enter\":[null]},\"AssignmentPattern\":{\"enter\":[null]},\"ArrayPattern\":{\"enter\":[null]},\"ObjectPattern\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-new-target\",\"visitor\":{\"MetaProperty\":{\"enter\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"regenerator-transform\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"ObjectMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassMethod\":{\"enter\":[null],\"exit\":[null]},\"ClassPrivateMethod\":{\"enter\":[null],\"exit\":[null]},\"FunctionDeclaration\":{\"exit\":[null]},\"FunctionExpression\":{\"exit\":[null]},\"ArrowFunctionExpression\":{\"exit\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-member-expression-literals\",\"visitor\":{\"MemberExpression\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-property-literals\",\"visitor\":{\"ObjectProperty\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-reserved-words\",\"visitor\":{\"_exploded\":true,\"_verified\":true,\"Identifier\":{\"enter\":[null,null]},\"JSXIdentifier\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.13.8": {
    "metadata": {},
    "options": {
      "assumptions": {},
      "sourceRoot": "/Users/filipszutkowski/projects/react-todos/Backend/src/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/Users/filipszutkowski/projects/react-todos/Backend",
      "filename": "/Users/filipszutkowski/projects/react-todos/Backend/src/server.js",
      "targets": {},
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "browserslistConfigFile": false,
      "envName": "development",
      "root": "/Users/filipszutkowski/projects/react-todos/Backend",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "proposal-numeric-separator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "BigIntLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-json-strings",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-catch-binding",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "CatchClause": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-parameters",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-async-generator-functions",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-object-rest-spread",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "VariableDeclarator": {
              "enter": [
                null
              ]
            },
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-dotall-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-unicode-property-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-named-capturing-groups-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-async-to-generator",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-exponentiation-operator",
          "visitor": {
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "BinaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-template-literals",
          "visitor": {
            "TaggedTemplateExpression": {
              "enter": [
                null
              ]
            },
            "TemplateLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-literals",
          "visitor": {
            "NumericLiteral": {
              "enter": [
                null
              ]
            },
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-function-name",
          "visitor": {
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-arrow-functions",
          "visitor": {
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoped-functions",
          "visitor": {
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchCase": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-classes",
          "visitor": {
            "ExportDefaultDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-object-super",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-shorthand-properties",
          "visitor": {
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "ObjectProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-duplicate-keys",
          "visitor": {
            "ObjectExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-computed-properties",
          "visitor": {
            "ObjectExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-for-of",
          "visitor": {
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-sticky-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-escapes",
          "visitor": {
            "Identifier": {
              "enter": [
                null
              ]
            },
            "TemplateElement": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "StringLiteral": {
              "enter": [
                null
              ]
            },
            "DirectiveLiteral": {
              "enter": [
                null
              ]
            },
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-unicode-regex",
          "visitor": {
            "RegExpLiteral": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-spread",
          "visitor": {
            "ArrayExpression": {
              "enter": [
                null
              ]
            },
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "NewExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-destructuring",
          "visitor": {
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "AssignmentExpression": {
              "enter": [
                null
              ]
            },
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-block-scoping",
          "visitor": {
            "VariableDeclaration": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "_verified": true,
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-typeof-symbol",
          "visitor": {
            "UnaryExpression": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true,
            "BlockStatement": {
              "enter": [
                null
              ]
            },
            "CatchClause": {
              "enter": [
                null
              ]
            },
            "DoWhileStatement": {
              "enter": [
                null
              ]
            },
            "ForInStatement": {
              "enter": [
                null
              ]
            },
            "ForStatement": {
              "enter": [
                null
              ]
            },
            "FunctionDeclaration": {
              "enter": [
                null
              ]
            },
            "FunctionExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "enter": [
                null
              ]
            },
            "ObjectMethod": {
              "enter": [
                null
              ]
            },
            "SwitchStatement": {
              "enter": [
                null
              ]
            },
            "WhileStatement": {
              "enter": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "enter": [
                null
              ]
            },
            "ClassExpression": {
              "enter": [
                null
              ]
            },
            "ClassDeclaration": {
              "enter": [
                null
              ]
            },
            "ForOfStatement": {
              "enter": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ]
            },
            "StaticBlock": {
              "enter": [
                null
              ]
            },
            "TSModuleBlock": {
              "enter": [
                null
              ]
            },
            "AssignmentPattern": {
              "enter": [
                null
              ]
            },
            "ArrayPattern": {
              "enter": [
                null
              ]
            },
            "ObjectPattern": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-new-target",
          "visitor": {
            "MetaProperty": {
              "enter": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "regenerator-transform",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "ObjectMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "ClassPrivateMethod": {
              "enter": [
                null
              ],
              "exit": [
                null
              ]
            },
            "FunctionDeclaration": {
              "exit": [
                null
              ]
            },
            "FunctionExpression": {
              "exit": [
                null
              ]
            },
            "ArrowFunctionExpression": {
              "exit": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-member-expression-literals",
          "visitor": {
            "MemberExpression": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-property-literals",
          "visitor": {
            "ObjectProperty": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-reserved-words",
          "visitor": {
            "_exploded": true,
            "_verified": true,
            "Identifier": {
              "enter": [
                null,
                null
              ]
            },
            "JSXIdentifier": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/Users/filipszutkowski/projects/react-todos/Backend/src/server.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/Users/filipszutkowski/projects/react-todos/Backend/src/server.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/Users/filipszutkowski/projects/react-todos/Backend/src/",
        "sourceFileName": "server.js",
        "jsescOption": {
          "minimal": false
        }
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar app = (0, _express[\"default\"])();\napp.set('port', process.env.PORT || 3001);\nvar tasks = [{\n  name: 'Do dishes',\n  id: 1,\n  checked: false\n}, {\n  name: 'Clean the stove',\n  id: 2,\n  checked: false\n}, {\n  name: 'Make a sandwich',\n  id: 3,\n  checked: false\n}, {\n  name: 'Call mom',\n  id: 4,\n  checked: true\n}];\nvar user = {\n  name: 'Hobbit',\n  auth: 'randomStringAndNumber',\n  tasks: tasks\n};\napp.get('/user', function (req, res) {\n  res.status(200).json(user);\n});\napp.post('/profile', function (req, res) {\n  var _req$body = req.body,\n      name = _req$body.name,\n      auth = _req$body.auth,\n      tasks = _req$body.tasks;\n  var userAuth = name === user.name && auth === user.auth;\n\n  if (!userAuth) {\n    res.status(500).json('wrong credz');\n    return;\n  }\n\n  user = _objectSpread(_objectSpread({}, user), {}, {\n    tasks: tasks\n  });\n  res.status(200).json(tasks.length);\n});\napp.listen(app.get('port'), function () {\n  console.log('server running', app.get('port'));\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNlcnZlci5qcyJdLCJuYW1lcyI6WyJhcHAiLCJzZXQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsInRhc2tzIiwibmFtZSIsImlkIiwiY2hlY2tlZCIsInVzZXIiLCJhdXRoIiwiZ2V0IiwicmVxIiwicmVzIiwic3RhdHVzIiwianNvbiIsInBvc3QiLCJib2R5IiwidXNlckF1dGgiLCJsZW5ndGgiLCJsaXN0ZW4iLCJjb25zb2xlIiwibG9nIl0sIm1hcHBpbmdzIjoiOztBQUFBOzs7Ozs7Ozs7O0FBRUEsSUFBTUEsR0FBRyxHQUFHLDBCQUFaO0FBQ0FBLEdBQUcsQ0FBQ0MsR0FBSixDQUFRLE1BQVIsRUFBZ0JDLE9BQU8sQ0FBQ0MsR0FBUixDQUFZQyxJQUFaLElBQW9CLElBQXBDO0FBRUEsSUFBSUMsS0FBSyxHQUFHLENBQ1Y7QUFBRUMsRUFBQUEsSUFBSSxFQUFFLFdBQVI7QUFBcUJDLEVBQUFBLEVBQUUsRUFBRSxDQUF6QjtBQUE0QkMsRUFBQUEsT0FBTyxFQUFFO0FBQXJDLENBRFUsRUFFVjtBQUFFRixFQUFBQSxJQUFJLEVBQUUsaUJBQVI7QUFBMkJDLEVBQUFBLEVBQUUsRUFBRSxDQUEvQjtBQUFrQ0MsRUFBQUEsT0FBTyxFQUFFO0FBQTNDLENBRlUsRUFHVjtBQUFFRixFQUFBQSxJQUFJLEVBQUUsaUJBQVI7QUFBMkJDLEVBQUFBLEVBQUUsRUFBRSxDQUEvQjtBQUFrQ0MsRUFBQUEsT0FBTyxFQUFFO0FBQTNDLENBSFUsRUFJVjtBQUFFRixFQUFBQSxJQUFJLEVBQUUsVUFBUjtBQUFvQkMsRUFBQUEsRUFBRSxFQUFFLENBQXhCO0FBQTJCQyxFQUFBQSxPQUFPLEVBQUU7QUFBcEMsQ0FKVSxDQUFaO0FBT0EsSUFBSUMsSUFBSSxHQUFHO0FBQ1RILEVBQUFBLElBQUksRUFBRSxRQURHO0FBRVRJLEVBQUFBLElBQUksRUFBRSx1QkFGRztBQUdUTCxFQUFBQSxLQUFLLEVBQUVBO0FBSEUsQ0FBWDtBQU1BTCxHQUFHLENBQUNXLEdBQUosQ0FBUSxPQUFSLEVBQWlCLFVBQUNDLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQzdCQSxFQUFBQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQk4sSUFBckI7QUFDRCxDQUZEO0FBSUFULEdBQUcsQ0FBQ2dCLElBQUosQ0FBUyxVQUFULEVBQXFCLFVBQUNKLEdBQUQsRUFBTUMsR0FBTixFQUFjO0FBQUEsa0JBQ0hELEdBQUcsQ0FBQ0ssSUFERDtBQUFBLE1BQ3pCWCxJQUR5QixhQUN6QkEsSUFEeUI7QUFBQSxNQUNuQkksSUFEbUIsYUFDbkJBLElBRG1CO0FBQUEsTUFDYkwsS0FEYSxhQUNiQSxLQURhO0FBRWpDLE1BQU1hLFFBQVEsR0FBR1osSUFBSSxLQUFLRyxJQUFJLENBQUNILElBQWQsSUFBc0JJLElBQUksS0FBS0QsSUFBSSxDQUFDQyxJQUFyRDs7QUFDQSxNQUFJLENBQUNRLFFBQUwsRUFBZTtBQUNiTCxJQUFBQSxHQUFHLENBQUNDLE1BQUosQ0FBVyxHQUFYLEVBQWdCQyxJQUFoQixDQUFxQixhQUFyQjtBQUNBO0FBQ0Q7O0FBQ0ROLEVBQUFBLElBQUksbUNBQVFBLElBQVI7QUFBY0osSUFBQUEsS0FBSyxFQUFFQTtBQUFyQixJQUFKO0FBRUFRLEVBQUFBLEdBQUcsQ0FBQ0MsTUFBSixDQUFXLEdBQVgsRUFBZ0JDLElBQWhCLENBQXFCVixLQUFLLENBQUNjLE1BQTNCO0FBQ0QsQ0FWRDtBQVlBbkIsR0FBRyxDQUFDb0IsTUFBSixDQUFXcEIsR0FBRyxDQUFDVyxHQUFKLENBQVEsTUFBUixDQUFYLEVBQTRCLFlBQVk7QUFDdENVLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFZLGdCQUFaLEVBQThCdEIsR0FBRyxDQUFDVyxHQUFKLENBQVEsTUFBUixDQUE5QjtBQUNELENBRkQiLCJzb3VyY2VSb290IjoiL1VzZXJzL2ZpbGlwc3p1dGtvd3NraS9wcm9qZWN0cy9yZWFjdC10b2Rvcy9CYWNrZW5kL3NyYy8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcblxuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuYXBwLnNldCgncG9ydCcsIHByb2Nlc3MuZW52LlBPUlQgfHwgMzAwMSk7XG5cbmxldCB0YXNrcyA9IFtcbiAgeyBuYW1lOiAnRG8gZGlzaGVzJywgaWQ6IDEsIGNoZWNrZWQ6IGZhbHNlIH0sXG4gIHsgbmFtZTogJ0NsZWFuIHRoZSBzdG92ZScsIGlkOiAyLCBjaGVja2VkOiBmYWxzZSB9LFxuICB7IG5hbWU6ICdNYWtlIGEgc2FuZHdpY2gnLCBpZDogMywgY2hlY2tlZDogZmFsc2UgfSxcbiAgeyBuYW1lOiAnQ2FsbCBtb20nLCBpZDogNCwgY2hlY2tlZDogdHJ1ZSB9LFxuXTtcblxubGV0IHVzZXIgPSB7XG4gIG5hbWU6ICdIb2JiaXQnLFxuICBhdXRoOiAncmFuZG9tU3RyaW5nQW5kTnVtYmVyJyxcbiAgdGFza3M6IHRhc2tzLFxufTtcblxuYXBwLmdldCgnL3VzZXInLCAocmVxLCByZXMpID0+IHtcbiAgcmVzLnN0YXR1cygyMDApLmpzb24odXNlcik7XG59KTtcblxuYXBwLnBvc3QoJy9wcm9maWxlJywgKHJlcSwgcmVzKSA9PiB7XG4gIGNvbnN0IHsgbmFtZSwgYXV0aCwgdGFza3MgfSA9IHJlcS5ib2R5O1xuICBjb25zdCB1c2VyQXV0aCA9IG5hbWUgPT09IHVzZXIubmFtZSAmJiBhdXRoID09PSB1c2VyLmF1dGg7XG4gIGlmICghdXNlckF1dGgpIHtcbiAgICByZXMuc3RhdHVzKDUwMCkuanNvbignd3JvbmcgY3JlZHonKTtcbiAgICByZXR1cm47XG4gIH1cbiAgdXNlciA9IHsgLi4udXNlciwgdGFza3M6IHRhc2tzIH07XG5cbiAgcmVzLnN0YXR1cygyMDApLmpzb24odGFza3MubGVuZ3RoKTtcbn0pO1xuXG5hcHAubGlzdGVuKGFwcC5nZXQoJ3BvcnQnKSwgZnVuY3Rpb24gKCkge1xuICBjb25zb2xlLmxvZygnc2VydmVyIHJ1bm5pbmcnLCBhcHAuZ2V0KCdwb3J0JykpO1xufSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "server.js"
      ],
      "names": [
        "app",
        "set",
        "process",
        "env",
        "PORT",
        "tasks",
        "name",
        "id",
        "checked",
        "user",
        "auth",
        "get",
        "req",
        "res",
        "status",
        "json",
        "post",
        "body",
        "userAuth",
        "length",
        "listen",
        "console",
        "log"
      ],
      "mappings": ";;AAAA;;;;;;;;;;AAEA,IAAMA,GAAG,GAAG,0BAAZ;AACAA,GAAG,CAACC,GAAJ,CAAQ,MAAR,EAAgBC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAApC;AAEA,IAAIC,KAAK,GAAG,CACV;AAAEC,EAAAA,IAAI,EAAE,WAAR;AAAqBC,EAAAA,EAAE,EAAE,CAAzB;AAA4BC,EAAAA,OAAO,EAAE;AAArC,CADU,EAEV;AAAEF,EAAAA,IAAI,EAAE,iBAAR;AAA2BC,EAAAA,EAAE,EAAE,CAA/B;AAAkCC,EAAAA,OAAO,EAAE;AAA3C,CAFU,EAGV;AAAEF,EAAAA,IAAI,EAAE,iBAAR;AAA2BC,EAAAA,EAAE,EAAE,CAA/B;AAAkCC,EAAAA,OAAO,EAAE;AAA3C,CAHU,EAIV;AAAEF,EAAAA,IAAI,EAAE,UAAR;AAAoBC,EAAAA,EAAE,EAAE,CAAxB;AAA2BC,EAAAA,OAAO,EAAE;AAApC,CAJU,CAAZ;AAOA,IAAIC,IAAI,GAAG;AACTH,EAAAA,IAAI,EAAE,QADG;AAETI,EAAAA,IAAI,EAAE,uBAFG;AAGTL,EAAAA,KAAK,EAAEA;AAHE,CAAX;AAMAL,GAAG,CAACW,GAAJ,CAAQ,OAAR,EAAiB,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC7BA,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBN,IAArB;AACD,CAFD;AAIAT,GAAG,CAACgB,IAAJ,CAAS,UAAT,EAAqB,UAACJ,GAAD,EAAMC,GAAN,EAAc;AAAA,kBACHD,GAAG,CAACK,IADD;AAAA,MACzBX,IADyB,aACzBA,IADyB;AAAA,MACnBI,IADmB,aACnBA,IADmB;AAAA,MACbL,KADa,aACbA,KADa;AAEjC,MAAMa,QAAQ,GAAGZ,IAAI,KAAKG,IAAI,CAACH,IAAd,IAAsBI,IAAI,KAAKD,IAAI,CAACC,IAArD;;AACA,MAAI,CAACQ,QAAL,EAAe;AACbL,IAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqB,aAArB;AACA;AACD;;AACDN,EAAAA,IAAI,mCAAQA,IAAR;AAAcJ,IAAAA,KAAK,EAAEA;AAArB,IAAJ;AAEAQ,EAAAA,GAAG,CAACC,MAAJ,CAAW,GAAX,EAAgBC,IAAhB,CAAqBV,KAAK,CAACc,MAA3B;AACD,CAVD;AAYAnB,GAAG,CAACoB,MAAJ,CAAWpB,GAAG,CAACW,GAAJ,CAAQ,MAAR,CAAX,EAA4B,YAAY;AACtCU,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BtB,GAAG,CAACW,GAAJ,CAAQ,MAAR,CAA9B;AACD,CAFD",
      "sourceRoot": "/Users/filipszutkowski/projects/react-todos/Backend/src/",
      "sourcesContent": [
        "import express from 'express';\n\nconst app = express();\napp.set('port', process.env.PORT || 3001);\n\nlet tasks = [\n  { name: 'Do dishes', id: 1, checked: false },\n  { name: 'Clean the stove', id: 2, checked: false },\n  { name: 'Make a sandwich', id: 3, checked: false },\n  { name: 'Call mom', id: 4, checked: true },\n];\n\nlet user = {\n  name: 'Hobbit',\n  auth: 'randomStringAndNumber',\n  tasks: tasks,\n};\n\napp.get('/user', (req, res) => {\n  res.status(200).json(user);\n});\n\napp.post('/profile', (req, res) => {\n  const { name, auth, tasks } = req.body;\n  const userAuth = name === user.name && auth === user.auth;\n  if (!userAuth) {\n    res.status(500).json('wrong credz');\n    return;\n  }\n  user = { ...user, tasks: tasks };\n\n  res.status(200).json(tasks.length);\n});\n\napp.listen(app.get('port'), function () {\n  console.log('server running', app.get('port'));\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1615379303793
  }
}